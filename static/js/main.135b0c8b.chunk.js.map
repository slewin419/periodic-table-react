{"version":3,"sources":["components/ElementAPI.js","components/Element.js","components/PeriodicTableChart.js","components/ui/Item.js","components/ui/AppMenu.js","components/Atom.js","components/ElementDisplay.js","App.js","serviceWorker.js","index.js"],"names":["ELEMENTS","elements","ElementAPI","getElementByPosition","x","y","index","findIndex","element","xpos","ypos","Element","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","active","category","alkaline earth metal","alkali metal","metalloid","noble gas","diatomic nonmetal","transition metal","post-transition metal","getCategory","_this2","isActive","group","toLowerCase","react_default","a","createElement","className","concat","getCategoryClassName","onClick","handleClick","bind","title","name","number","symbol","renderElement","React","Component","PeriodicTableChart","ROWS","COLUMNS","currentElement","activeElementGroups","components_Element","handleElementClick","table","columns","push","key","id","createTable","Item","children","text","appMenuStyle","position","bottom","width","height","zIndex","AppMenu","isMenuOpen","e","setState","currentTarget","innerText","setActiveElementGroups","toggleMenu","items","filter","child","type","style","textTransform","map","item","i","Item_Item","handleItemClick","Atom","renderShell","electrons","level","_electrons","styles","transform","animation","animationDuration","animationName","shells","Fragment","ElementDisplay","components_Atom","href","source","phase","discovered_by","summary","App","selected","_group","paddingTop","components_ElementDisplay","components_PeriodicTableChart","setCurrentElement","ui_AppMenu","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.135b0c8b.chunk.js","sourcesContent":["import elementJSON from '../PeriodicTableJSON.json';\r\n\r\nconst ELEMENTS = elementJSON.elements;\r\n\r\nvar ElementAPI = {\r\n    getElementByPosition(x,y) {\r\n        let index = ELEMENTS.findIndex((element) => {\r\n            return (element.xpos === x && element.ypos === y);\r\n        });        \r\n\r\n        //let element = ELEMENTS.splice(index, 1);\r\n        \r\n        return (index !== -1) ? ELEMENTS[index] : false;\r\n    }\r\n}\r\nexport default ElementAPI;","import React from 'react';\r\nimport ElementAPI from './ElementAPI';\r\n\r\nclass Element extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.element = ElementAPI.getElementByPosition(props.xpos, props.ypos);\r\n\r\n        this.state = {\r\n            active: ''\r\n        }\r\n    }\r\n\r\n    getCategory(){\r\n        return this.element.category || '';\r\n    }\r\n\r\n    getCategoryClassName(){\r\n        return {\r\n            'alkaline earth metal': 'aem',\r\n            'alkali metal': 'am',\r\n            'metalloid': 'md',\r\n            'noble gas': 'gas',\r\n            'diatomic nonmetal': 'dn',\r\n            'transition metal': 'tm',\r\n            'post-transition metal': 'pm'\r\n        }[this.getCategory()] || '';\r\n    }\r\n\r\n    renderElement(element) {        \r\n        let isActive = this.props.active.findIndex((group) => {\r\n            return group.toLowerCase() === this.getCategory();   \r\n        }) !== -1 ? 'active' : '';\r\n\r\n        return (\r\n            <div className={ `element ${isActive} ${this.getCategoryClassName()}` }                  \r\n                 onClick={this.props.handleClick.bind(this, element)}                  \r\n                 title={element.name}>\r\n                {/* <span className=\"position\">{`${element.xpos}, ${element.ypos}`}</span> */}\r\n                <span className=\"number\">{element.number}</span>\r\n                <span className=\"symbol\">{element.symbol}</span>\r\n                {/* <span className=\"name\">{element.name}</span> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (this.element) ? this.renderElement(this.element) : <div className=\"block blank\"></div>;\r\n    }\r\n}\r\n\r\nexport default Element;","import React from 'react';\r\nimport Element from './Element';\r\n\r\nclass PeriodicTableChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.ROWS = 10;\r\n        this.COLUMNS = 18;\r\n\r\n        this.state = {\r\n            currentElement: null            \r\n        };\r\n    }   \r\n\r\n    element(x, y) {\r\n        let {activeElementGroups} = this.props;\r\n        return (\r\n            <Element xpos={x} ypos={y} handleClick={this.props.handleElementClick} active={activeElementGroups}/>\r\n        );\r\n    }\r\n\r\n    createTable() {\r\n        let table = [];\r\n        for (var y = 1; y <= this.ROWS; y++) {\r\n            let columns = [];\r\n            for (var x = 1; x <= this.COLUMNS; x++) {\r\n                columns.push(<div className={\"block \" + x + \"-\" + y} key={x + y} >{this.element(x, y)}</div >);\r\n            }\r\n            table.push(<div id={y} key={y}>{columns}</div>);\r\n        }\r\n\r\n        return table;\r\n    }\r\n\r\n    render() {              \r\n        return (\r\n            <div id=\"periodic-table\">                \r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodicTableChart;\r\n","import React from 'react';\r\n\r\nexport default class Item extends React.Component {\r\n\r\n    getCategoryClassName(){\r\n        return {\r\n            'alkaline earth metal': 'aem',\r\n            'alkali metal': 'am',\r\n            'metalloid': 'md',\r\n            'noble gas': 'gas',\r\n            'diatomic nonmetal': 'dn',\r\n            'transition metal': 'tm',\r\n            'post-transition metal': 'pm'\r\n        }[this.props.children.toLowerCase()] || '';\r\n    }\r\n    \r\n    render(){\r\n        let text = this.props.children;\r\n        return (\r\n            <li className={this.getCategoryClassName()} onClick={this.props.onClick}>{text}</li>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Item from './Item';\r\n\r\nlet appMenuStyle = {\r\n    position: 'fixed',\r\n    bottom: '0px',    \r\n    width: '100%',\r\n    height: '60px',\r\n    zIndex: '999'    \r\n};\r\n\r\nclass AppMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isMenuOpen: false,\r\n            activeElementGroups: []\r\n        }\r\n    }\r\n\r\n    toggleMenu(e) {\r\n        this.setState({isMenuOpen: !this.state.isMenuOpen});\r\n    }\r\n\r\n    handleItemClick(e) {\r\n        let group = e.currentTarget.innerText; \r\n        this.props.setActiveElementGroups(group);\r\n        this.toggleMenu();\r\n    }\r\n\r\n    render() {\r\n        let {title} = this.props;\r\n        let items = this.props.children.filter((child) => { return child.type.name === \"Item\" });        \r\n        let isMenuOpen = (this.state.isMenuOpen) ? 'shown' : 'hidden';\r\n        return ( \r\n            <div id=\"app-menu\" style={appMenuStyle}>\r\n                <div className=\"container\">\r\n                    <div className=\"menu-header\">\r\n                        <div className=\"toggle-icon\" onClick={e => this.toggleMenu(e)}>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'menu-body ' + isMenuOpen}>\r\n                        <h2 className=\"title\">{title}</h2>\r\n                        <ul className=\"menu-list\" style={{textTransform: 'capitalize'}}>\r\n                            {\r\n                                items.map((item, i) => { \r\n                                    return <Item key={i} onClick={this.handleItemClick.bind(this)}>{item.props.children}</Item>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>                    \r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppMenu;","import React from 'react';\r\n\r\nclass Atom extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shells: null\r\n        };\r\n    }\r\n\r\n    renderShell = (electrons, level) => {\r\n        let _electrons = [];        \r\n\r\n        for( let i = 1; i <= electrons; i++ ){\r\n            let rotation = (360/electrons) * i,\r\n                translate = 10 + (level * 20);\r\n\r\n            let styles = {\r\n                transform: 'rotate(' + rotation + 'deg) translate(' + translate + 'px)'\r\n            };\r\n\r\n            _electrons.push(<span className=\"electron\" style={styles} key={level + '-' + i}></span>);\r\n        }\r\n\r\n        let animation = {\r\n            width: 20 + (level * 40) + 'px',\r\n            height: 20 + (level * 40) + 'px',\r\n            animationDuration: (++level)*4 + 's',\r\n            animationName: (level % 2) ? 'spin' : 'spin-cc'\r\n        }\r\n\r\n        return (\r\n            <div className=\"shell\" style={animation} key={level}>\r\n                {\r\n                    _electrons\r\n                }       \r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {  \r\n        let shells = this.props.shells;\r\n        return (\r\n            <>\r\n                {\r\n                    shells.map((electrons, level)=>{\r\n                        return this.renderShell(electrons, level);\r\n                    })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Atom;","import React from 'react';\r\nimport Atom from './Atom';\r\n\r\nclass ElementDisplay extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentElement: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let element = this.props.element; \r\n        if (element) {\r\n            return (\r\n                <div id=\"element-display\">\r\n                    <div className=\"atom\">\r\n                        <Atom shells={element.shells} />\r\n                    </div>\r\n                    <div className=\"atom-info\">\r\n                        <h4><a href={element.source} title=\"Wikipedia\">{element.name}</a></h4>                        \r\n                        <div className=\"summary\">\r\n                            <i>({element.phase + ', ' + element.category})</i>\r\n                            <p>Discovered by: {element.discovered_by}</p>\r\n                            <p>{element.summary}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return <div id=\"element-display\" className=\"text-center\">\r\n                    <h2>Click an element to show its information here.</h2>\r\n                </div>\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ElementDisplay;","import React, { Component } from 'react';\r\nimport PeriodicTableChart from './components/PeriodicTableChart';\r\nimport AppMenu from './components/ui/AppMenu';\r\nimport Item from './components/ui/Item';\r\nimport ElementDisplay from './components/ElementDisplay';\r\n\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        activeElementGroups: [],\r\n        currentElement: ''\r\n    };\r\n  }\r\n\r\n  setActiveElementGroups(group){\r\n    let groups = [];\r\n    let selected = this.state.activeElementGroups.findIndex((_group) => group === _group);\r\n    \r\n    this.setState((state,props) => {            \r\n      if(selected === -1){\r\n        groups = state.activeElementGroups.concat(group);\r\n      }else {                \r\n        groups = state.activeElementGroups.filter((_group) => group !== _group);\r\n      }\r\n\r\n      return {\r\n        activeElementGroups: groups\r\n      }      \r\n    });\r\n  }\r\n\r\n  setCurrentElement(element) {\r\n    this.setState({currentElement: element});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"App\">\r\n        <h1 className=\"page-title\">Periodic Table</h1>     \r\n        <div style={{paddingTop: '65px', height: '100%'}}>\r\n          <div className=\"element-display-container\">\r\n            <ElementDisplay element={this.state.currentElement} />\r\n          </div>\r\n          <div className=\"periodic-table-container\">\r\n            <PeriodicTableChart activeElementGroups={this.state.activeElementGroups} handleElementClick={this.setCurrentElement.bind(this)}/>\r\n          </div>          \r\n        </div>\r\n        <AppMenu title={'Element Groups'} \r\n                 setActiveElementGroups={this.setActiveElementGroups.bind(this)}>            \r\n            <Item>alkaline earth metal</Item>\r\n            <Item>alkali metal</Item>\r\n            <Item>metalloid</Item>\r\n            <Item>noble gas</Item> \r\n            <Item>diatomic nonmetal</Item>\r\n            <Item>transition metal</Item>\r\n            <Item>post-transition metal</Item>\r\n        </AppMenu>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}